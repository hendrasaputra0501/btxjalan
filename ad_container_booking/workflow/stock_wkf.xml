<openerp>
	<data>
        <record id="act_book1" model="workflow.activity">
            <field name="wkf_id" ref="stock.wkf_picking"/>
            <field name="name">book_created</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'booking_created'})</field>
        </record>

        <record id="act_book" model="workflow.activity">
            <field name="wkf_id" ref="stock.wkf_picking"/>
            <field name="name">book</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'booked'})</field>
        </record>

        <record id="act_instruct" model="workflow.activity">
            <field name="wkf_id" ref="stock.wkf_picking"/>
            <field name="name">instruct</field>
            <field name="kind">dummy</field>
        </record>

        <record id="stock.trans_draft_confirmed" model="workflow.transition">
            <field name="act_from" ref="stock.act_draft"/>
            <field name="act_to" ref="stock.act_confirmed"/>
            <field name="signal">button_confirm</field>
            <field name="condition">type!='out' or sale_type=='local'</field>
        </record>
        
        <record id="trans_draft_booked1" model="workflow.transition">
            <field name="act_from" ref="stock.act_draft"/>
            <field name="act_to" ref="act_book1"/>
            <field name="signal">button_confirm</field>
            <field name="condition">type=='out' and sale_type=='export'</field>
        </record>

        <record id="trans_booked1_cancel" model="workflow.transition">
            <field name="act_from" ref="act_book1"/>
            <field name="act_to" ref="stock.act_cancel"/>
            <field name="signal">button_cancel</field>
            <field name="condition">type=='out'</field>
        </record>        

        <record id="trans_booked1_booked" model="workflow.transition">
            <field name="act_from" ref="act_book1"/>
            <field name="act_to" ref="act_book"/>
            <field name="condition">type=='out' and container_book_id</field>
            <field name="signal">booked</field>
        </record>

        <record id="trans_booked_booked1" model="workflow.transition">
            <field name="act_from" ref="act_book"/>
            <field name="act_to" ref="act_book1"/>
            <field name="condition">type=='out'</field>
            <field name="signal">book_to_book1</field>
        </record>

        <record id="trans_booked_confirmed" model="workflow.transition">
            <field name="act_from" ref="act_book"/>
            <field name="act_to" ref="stock.act_confirmed"/>
            <field name="condition">type=='out'</field>
            <field name="signal">booking_confirmed</field>
        </record>

        <record id="trans_confirmed" model="workflow.transition">
            <field name="act_from" ref="stock.act_confirmed"/>
            <field name="act_to" ref="act_book1"/>
            <field name="condition">type=='out'</field>
            <field name="signal">booking_cancelled</field>
        </record>

        <record id="trans_confirmed_instructed" model="workflow.transition">
            <field name="act_from" ref="stock.act_confirmed"/>
            <field name="act_to" ref="act_instruct"/>
            <field name="condition">type=='out' and container_book_id</field>
            <field name="signal">instructed</field>
        </record>

        <record id="trans_instructed_confirmed" model="workflow.transition">
            <field name="act_from" ref="act_instruct"/>
            <field name="act_to" ref="stock.act_confirmed"/>
            <field name="condition">type=='out' and not check_book('instructed')</field>
            <field name="signal">cancel_instructed</field>
        </record>

		<record id="trans_instructed_assigned" model="workflow.transition">
            <field name="act_from" ref="act_instruct"/>
            <field name="act_to" ref="stock.act_assigned"/>
            <field name="condition">type=='out' and test_assigned() and check_book('instructed')</field>
        </record>
        
        <record id="trans_assigned_instructed" model="workflow.transition">
            <field name="act_from" ref="stock.act_assigned"/>
            <field name="act_to" ref="act_instruct"/>
            <field name="condition">type=='out' and not test_assigned()</field>
        </record>
        
		<record id="stock.trans_confirmed_assigned_back" model="workflow.transition">
            <field name="act_from" ref="stock.act_assigned"/>
            <field name="act_to" ref="stock.act_confirmed"/>
            <field name="condition">type in ('in','internal') and not test_assigned()</field>
        </record>
        <record id="stock.trans_confirmed_assigned" model="workflow.transition">
            <field name="act_from" ref="stock.act_confirmed"/>
            <field name="act_to" ref="stock.act_assigned"/>
            <field name="condition">(type in ('in','internal') or sale_type=='local') and test_assigned()</field>
        </record>
		
	</data>
</openerp>